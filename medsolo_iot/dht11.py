# MicroPython DHT driverimport timefrom machine import Pinclass DHTBase:    def __init__(self, pin):        self.pin = pin        self.buf = bytearray(5)    def measure(self):        self._send_init_signal()        self._parse_data()    def _send_init_signal(self):        self.pin.init(Pin.OUT)        self.pin.value(0)        time.sleep_ms(20)        self.pin.value(1)        time.sleep_us(40)        self.pin.init(Pin.IN)    def _parse_data(self):        buf = self.buf        for i in range(40):            while self.pin.value() == 0:                pass            length = 0            while self.pin.value() == 1:                length += 1                if length > 100:                    break            buf[i // 8] <<= 1            if length > 50:                buf[i // 8] |= 1        if ((buf[0] + buf[1] + buf[2] + buf[3]) & 0xFF) != buf[4]:            raise Exception("Checksum de leitura invlido")class DHT11(DHTBase):    def temperature(self):        return self.buf[2]    def humidity(self):        return self.buf[0]